package forms;

import dao.AlunoMDAO;
import dao.IdiomaMDAO;
import dao.RelacionamentoMDAO;
import dao.UsuarioMDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vo.AlunoVO;
import vo.IdiomaVO;
import vo.RelacionamentoVO;
import vo.UsuarioVO;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Professor
 */
public class frmAluno extends javax.swing.JFrame {

    DefaultTableModel tIdiomas;

    public frmAluno() {
        initComponents();
        popularComboIdioma();
        desablitaBotoes();
        desabilitaCampos();
    }

    //metodo para popular combo idiomas
    public void popularComboIdioma() {

        IdiomaMDAO iDAO = new IdiomaMDAO();
        List<IdiomaVO> idiomas = iDAO.listarIdiomas();
        cbIdioma.removeAllItems();

        for (int i = 0; i < idiomas.size(); i++) {
            cbIdioma.addItem(idiomas.get(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        pnlAluno = new javax.swing.JPanel();
        lblProntuario = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblIdade = new javax.swing.JLabel();
        lblIdioma = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtIdade = new javax.swing.JTextField();
        cbIdioma = new javax.swing.JComboBox();
        btnAdicionarIdioma = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIdioma = new javax.swing.JTable();
        btnLocalizar = new javax.swing.JButton();
        lblIdade1 = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        txtProntuario = new javax.swing.JFormattedTextField();
        btnInserir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Localizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(".: Cadastro de Alunos :.");
        setResizable(false);

        pnlAluno.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro Aluno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 18), java.awt.Color.blue)); // NOI18N

        lblProntuario.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblProntuario.setText("Prontu√°rio:");

        lblNome.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblNome.setText("Nome:");

        lblIdade.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblIdade.setText("Idade:");

        lblIdioma.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblIdioma.setText("Idioma:");

        txtNome.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        txtIdade.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        btnAdicionarIdioma.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnAdicionarIdioma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnAdicionarIdioma.setText("Adicionar");
        btnAdicionarIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarIdiomaActionPerformed(evt);
            }
        });

        tblIdioma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Idioma"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblIdioma);

        btnLocalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Search.png"))); // NOI18N
        btnLocalizar.setText("Localizar");
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });

        lblIdade1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblIdade1.setText("Cidade:");

        txtCidade.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        txtProntuario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtProntuario.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        javax.swing.GroupLayout pnlAlunoLayout = new javax.swing.GroupLayout(pnlAluno);
        pnlAluno.setLayout(pnlAlunoLayout);
        pnlAlunoLayout.setHorizontalGroup(
            pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAlunoLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlAlunoLayout.createSequentialGroup()
                .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAlunoLayout.createSequentialGroup()
                        .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAlunoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblProntuario))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAlunoLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lblNome)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlAlunoLayout.createSequentialGroup()
                                .addComponent(txtProntuario)
                                .addGap(18, 18, 18)
                                .addComponent(btnLocalizar)
                                .addGap(9, 9, 9))))
                    .addGroup(pnlAlunoLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblIdioma)
                            .addComponent(lblIdade)
                            .addComponent(lblIdade1))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(pnlAlunoLayout.createSequentialGroup()
                                    .addComponent(cbIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAdicionarIdioma))
                                .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(63, 63, 63))
        );
        pnlAlunoLayout.setVerticalGroup(
            pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAlunoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLocalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProntuario)
                    .addComponent(txtProntuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIdade)
                    .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdade1))
                .addGap(18, 18, 18)
                .addGroup(pnlAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdioma)
                    .addComponent(btnAdicionarIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/korganizer.png"))); // NOI18N
        btnAlterar.setText("Salvar Altera√ß√µes");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/button_cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnInserir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInserir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAlterar)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
  {//GEN-HEADEREND:event_jButton1ActionPerformed
      // TODO add your handling code here:
  }//GEN-LAST:event_jButton1ActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
  {//GEN-HEADEREND:event_jButton2ActionPerformed
      // TODO add your handling code here:
  }//GEN-LAST:event_jButton2ActionPerformed

    public void desablitaBotoes() {
        //metodo que desabilita os botoes ao carregar o form
        btnCancelar.setEnabled(false);
        btnAlterar.setEnabled(false);
        btnSalvar.setEnabled(false);
        btnAdicionarIdioma.setEnabled(false);
    }

    public void desabilitaCampos() {
        //metodo para desabilitar os campos quando carrega o form
        txtProntuario.setEnabled(false);
        txtNome.setEnabled(false);
        txtCidade.setEnabled(false);
        txtIdade.setEnabled(false);
        cbIdioma.setEnabled(false);
    }

    public void habilitaCampos() {
        txtProntuario.setEnabled(true);
        txtNome.setEnabled(true);
        txtCidade.setEnabled(true);
        txtIdade.setEnabled(true);
        cbIdioma.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnAdicionarIdioma.setEnabled(true);
        btnSalvar.setEnabled(true);
        btnLocalizar.setEnabled(false);
    }

    private void btnAdicionarIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarIdiomaActionPerformed
        //recupera o idioma e insere
        String idioma = String.valueOf(cbIdioma.getSelectedItem());
        int id = cbIdioma.getSelectedIndex();//recupera o id do item inserido
        cbIdioma.removeItemAt(id);//remove ele do combo

        Object[] obj = {idioma};
        tIdiomas = (DefaultTableModel) tblIdioma.getModel();
        tIdiomas.addRow(obj);

        //verifica se existe algum item no combo, caso n√£o ele √© desabilitado
        int qtde_itens_combo = cbIdioma.getItemCount();
        if (qtde_itens_combo == 0) {
            cbIdioma.setEnabled(false);
            btnAdicionarIdioma.setEnabled(false);
        }
    }//GEN-LAST:event_btnAdicionarIdiomaActionPerformed

    public void limparCampos() {
        //apaga os dados dos campos
        txtProntuario.setText("");
        txtNome.setText("");
        txtIdade.setText("");
        txtCidade.setText("");
        cbIdioma.setEnabled(true);
        cbIdioma.setSelectedIndex(0);
    }

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        habilitaCampos();
        btnInserir.setEnabled(false);
    }//GEN-LAST:event_btnInserirActionPerformed

    public void popularTabela(List<RelacionamentoVO> listaIdiomas) {
        tIdiomas = (DefaultTableModel) tblIdioma.getModel();

        while (tIdiomas.getRowCount() > 0) {
            tIdiomas.removeRow(0);
        }

        String[] linhas = new String[]{null, null};

        for (int i = 0; i < listaIdiomas.size(); i++) {
            tIdiomas.addRow(linhas);
            tIdiomas.setValueAt(listaIdiomas.get(i).getIdioma_id_idioma().getIdioma(), i, 0);
            tblIdioma.setRowHeight(30);
        }
    }

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        popularComboIdioma();
        limparCampos();
        btnLocalizar.setEnabled(true);
        //remover os dados da jtable
        if (tblIdioma.getRowCount() != 0) {
            while (tIdiomas.getRowCount() > 0) {
                tIdiomas.removeRow(0);
            }
        }
        desabilitaCampos();
        desablitaBotoes();
        btnInserir.setEnabled(true);
        btnLocalizar.setEnabled(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    public void pesquisarDados() {
        String id_prontuario = txtProntuario.getText();
        RelacionamentoMDAO relDAO = new RelacionamentoMDAO();
        List<RelacionamentoVO> listaDeIdiomasProntuario;
        listaDeIdiomasProntuario = relDAO.listaDeIdiomas(id_prontuario);
        popularTabela(listaDeIdiomasProntuario);
    }

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed

        txtProntuario.setEnabled(true);
        //BUSCA O USUARIO PELO PRONTUARIO
        String prontuario = JOptionPane.showInputDialog("Digite o prontu√°rio do Aluno");
        txtProntuario.setText(prontuario);

        if (prontuario == null) {
            //NAO ENCONTROU
            desabilitaCampos();
            desablitaBotoes();
        } else if(prontuario.length() > 0) {
            //BUSCA O USUARIO
            int prontuario_id = Integer.parseInt(prontuario);
            UsuarioMDAO uDAO = new UsuarioMDAO();
            UsuarioVO uVO;
            uVO = uDAO.getUsuario(prontuario_id);

            //BUSCA O ALUNO
            AlunoMDAO aDAO = new AlunoMDAO();
            AlunoVO aVO;
            aVO = aDAO.getAluno(prontuario_id);

            if (uVO != null) {
                //SETA OS VALORES
                txtProntuario.setText(String.valueOf(uVO.getProntuario()));
                txtNome.setText(uVO.getNome());
                txtIdade.setText(String.valueOf(uVO.getIdade()));
                txtCidade.setText(aVO.getCidade());

                //PREENCHER A TABELA COM OS REFERENTES IDIOMAS
                pesquisarDados();
                //habilita os campos para alterar
                txtProntuario.setEnabled(false);
                txtNome.setEnabled(true);
                txtCidade.setEnabled(true);
                txtIdade.setEnabled(true);
                cbIdioma.setEnabled(false);
                btnCancelar.setEnabled(true);
                btnAdicionarIdioma.setEnabled(false);
                btnSalvar.setEnabled(false);
                btnLocalizar.setEnabled(false);
                btnAlterar.setEnabled(true);
                btnInserir.setEnabled(false);
                //
            } else  {
                //NAO ENCONTROU
                JOptionPane.showMessageDialog(null, "Prontu√°rio n√£o encontrado, verifique os dados!!!");
                desabilitaCampos();
                desablitaBotoes();
                txtProntuario.setText("");
            }
        }else{
             JOptionPane.showMessageDialog(null, "Preencha os dados corretamente!!!");
                desabilitaCampos();
                desablitaBotoes();
                txtProntuario.setText("");
        }
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // recuperar os dados para cadastrar
        String prontuario = txtProntuario.getText();
        String nome = txtNome.getText();
        String idade = txtIdade.getText();
        String cidade = txtCidade.getText();

        //validar os dados para cadastrar
        if (prontuario.isEmpty() || nome.isEmpty() || idade.isEmpty() || cidade.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Existem campos com preenchimento incorreto!!!");
        } else {
          //manda os dados para cadastro

            //CADASTRAR O USU√ÅRIO*************************************
            UsuarioVO uVO = new UsuarioVO();
            UsuarioMDAO uDAO = new UsuarioMDAO();

            uVO.setProntuario(prontuario);
            uVO.setNome(nome);
            uVO.setIdade(Integer.parseInt(idade));

            //CADASTRAR ALUNO****************************************************
            AlunoVO alunoVO = new AlunoVO();
            AlunoMDAO aDAO = new AlunoMDAO();

            alunoVO.setUsuario_prontuario(prontuario);
            alunoVO.setCidade(cidade);

            // FAZ O INSERT DO USUARIO E DO ALUNO
            if (uDAO.inserir(uVO) == true && aDAO.inserir(alunoVO) == true) {

                //percorrer a tabela para salvar os idiomas
                //recupera a qtde de linhas da tabela
                String idiomas = "";
                if (tblIdioma.getRowCount() == 0) {
                    //nao tem idioma cadastrado
                } else {
                    for (int i = 0; i < tblIdioma.getRowCount(); i++) {
                        //CADASTRA O RELACIONAMENTO
                        IdiomaVO iVO;
                        IdiomaMDAO iDAO = new IdiomaMDAO();

                        RelacionamentoVO relVO = new RelacionamentoVO();
                        RelacionamentoMDAO relDAO = new RelacionamentoMDAO();

                        //AQUI ESTA RECUPERANDO O ID DO IDIOMA PELO NOME
                        iVO = iDAO.getIdioma(String.valueOf(tblIdioma.getValueAt(i, 0)));

                        relVO.setIdioma_id_idioma(iVO);

                        relVO.setUsuario_prontuario(prontuario);
                        //JOptionPane.showMessageDialog(null, "id idioma = " + iVO.getId_idioma() + " prontuario " + prontuario);
                        relDAO.inserirRelacionamento(relVO);
                    }
                }

                JOptionPane.showMessageDialog(null, "Dados cadastrados com sucesso!!!");
                popularComboIdioma();
                limparCampos();
                desabilitaCampos();
                desablitaBotoes();
                btnLocalizar.setEnabled(true);
                btnInserir.setEnabled(true);

                //remover os dados da jtable
                if (tblIdioma.getRowCount() > 0) {
                    while (tIdiomas.getRowCount() > 0) {
                        tIdiomas.removeRow(0);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar os dados, PRONTU√ÅRIO EXISTENTE");
                popularComboIdioma();
                limparCampos();
                desabilitaCampos();
                desablitaBotoes();
                btnLocalizar.setEnabled(true);
                btnInserir.setEnabled(true);

                //remover os dados da jtable
                if (tblIdioma.getRowCount() != 0) {
                    while (tIdiomas.getRowCount() > 0) {
                        tIdiomas.removeRow(0);
                    }
                }
            }
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // recuperar os dados para cadastrar
        String prontuario = txtProntuario.getText();
        String nome = txtNome.getText();
        String idade = txtIdade.getText();
        String cidade = txtCidade.getText();

        //validar os dados para cadastrar
        if (prontuario.isEmpty() || nome.isEmpty() || idade.isEmpty() || cidade.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Existem campos com preenchimento incorreto!!!");
        } else {

            //QUANDO FOR UMA ALTERA√á√ÉO, VAI FAZER UPDATE DOS DADOS
            UsuarioVO uVO = new UsuarioVO();
            UsuarioMDAO uDAO = new UsuarioMDAO();

            uVO.setProntuario(prontuario);
            uVO.setNome(nome);
            uVO.setIdade(Integer.parseInt(idade));

            AlunoVO alunoVO = new AlunoVO();
            AlunoMDAO aDAO = new AlunoMDAO();

            alunoVO.setUsuario_prontuario(prontuario);
            alunoVO.setCidade(cidade);

            if (uDAO.update(uVO) == true && aDAO.update(alunoVO) == true) {
                //ALTUALIZAR OS IDIOMAS
              /*
                 for (int i = 0; i < tblIdioma.getRowCount(); i++) {
                 //ATUALIZA O RELACIONAMENTO
                 IdiomaVO iVO;
                 IdiomaMDAO iDAO = new IdiomaMDAO();

                 RelacionamentoVO relVO = new RelacionamentoVO();
                 RelacionamentoMDAO relDAO = new RelacionamentoMDAO();

                 //AQUI ESTA RECUPERANDO O ID DO IDIOMA PELO NOME
                 iVO = iDAO.getIdioma(String.valueOf(tblIdioma.getValueAt(i, 0)));

                 relVO.setIdioma_id_idioma(iVO);

                 relVO.setUsuario_prontuario(prontuario);
                 //JOptionPane.showMessageDialog(null, "id idioma = " + iVO.getId_idioma() + " prontuario " + prontuario);
                 relDAO.inserirRelacionamento(relVO);
                 }*/

                JOptionPane.showMessageDialog(null, "Dados atualizados com sucesso!!!");
                limparCampos();
                desabilitaCampos();
                desablitaBotoes();
                //remover os dados da jtable
                if (tblIdioma.getRowCount() != 0) {
                    while (tIdiomas.getRowCount() > 0) {
                        tIdiomas.removeRow(0);
                    }
                }
                btnLocalizar.setEnabled(true);
                btnInserir.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar os dados!!!");
                limparCampos();
                desabilitaCampos();
                desablitaBotoes();
                //remover os dados da jtable
                if (tIdiomas.getRowCount() != 0) {
                    while (tIdiomas.getRowCount() > 0) {
                        tIdiomas.removeRow(0);
                    }
                }
                btnLocalizar.setEnabled(true);
                btnInserir.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmProfessor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarIdioma;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cbIdioma;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIdade;
    private javax.swing.JLabel lblIdade1;
    private javax.swing.JLabel lblIdioma;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblProntuario;
    private javax.swing.JPanel pnlAluno;
    private javax.swing.JTable tblIdioma;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtIdade;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtProntuario;
    // End of variables declaration//GEN-END:variables

}
