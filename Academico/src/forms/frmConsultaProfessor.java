/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package forms;

import dto.Consulta;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Strong
 */
public class frmConsultaProfessor extends javax.swing.JFrame {

    /**
     * Creates new form ConsultaAluno
     */
    private Consulta consulta;
    
    private void preencheTabela() {
        ArrayList<Consulta> professor = new ArrayList<Consulta>();
        professor = this.consulta.getProfessorByPront();
        
        DefaultTableModel tabela = (DefaultTableModel) tblProfessores.getModel();
        tabela.setNumRows(0);
               
        //Verifica se retornou algum valor da consulta.
        if (professor == null)
        {
            JOptionPane.showMessageDialog(null, "Professor não encontrado, verifique os dados!!!");
            return;
        }
        
        //a verificacao assima é por que esse modelo de for(ForEach|For Aprimorado|Enhanced For)
        //não aceita uma lista nula.
        for (Consulta p : professor) 
        {
            if (p != null) 
            {
                Object[] obj = new Object[]{
                    p.getProntuario(),
                    p.getNome(),
                    p.getIdade(),
                    p.getIdioma(),
                    p.getSalario()
                };
                tabela.addRow(obj);
            }
        }
    }
    
    private static frmConsultaProfessor instance;
    
    public static frmConsultaProfessor getInstance()
    {
        if(instance == null)
      {
        instance = new frmConsultaProfessor();
        
      }
       
      return instance;
        
    }
    
    frmConsultaProfessor() 
    {
        initComponents();
        
        this.consulta = new Consulta();
        preencheTabela();
        txtProfessor.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoOrdenar = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProfessores = new javax.swing.JTable();
        pnlProfessor = new javax.swing.JPanel();
        txtProfessor = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        lblProfessor = new javax.swing.JLabel();
        pnlOrdenar = new javax.swing.JPanel();
        rbProntuario = new javax.swing.JRadioButton();
        rbNome = new javax.swing.JRadioButton();
        rbIdade = new javax.swing.JRadioButton();
        rbIdioma = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(".:Consulta Professores cadastrados:.");
        setName("frmConsultaProfessor"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblProfessores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "prontuario", "Nome", "Idade", "Idioma", "Salário"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProfessores);
        if (tblProfessores.getColumnModel().getColumnCount() > 0) {
            tblProfessores.getColumnModel().getColumn(0).setResizable(false);
            tblProfessores.getColumnModel().getColumn(1).setResizable(false);
            tblProfessores.getColumnModel().getColumn(2).setResizable(false);
            tblProfessores.getColumnModel().getColumn(3).setResizable(false);
            tblProfessores.getColumnModel().getColumn(4).setResizable(false);
        }

        pnlProfessor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar Professores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 18), new java.awt.Color(0, 51, 255))); // NOI18N
        pnlProfessor.setToolTipText("");

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Search.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        lblProfessor.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblProfessor.setText("Professor:");

        pnlOrdenar.setBorder(javax.swing.BorderFactory.createTitledBorder("Ordenar por:"));

        rbProntuario.setText("Prontuário");
        rbProntuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbProntuarioMouseClicked(evt);
            }
        });

        rbNome.setText("Nome");
        rbNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbNomeMouseClicked(evt);
            }
        });

        rbIdade.setText("Idade");
        rbIdade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIdadeActionPerformed(evt);
            }
        });

        rbIdioma.setText("Idioma");
        rbIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIdiomaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOrdenarLayout = new javax.swing.GroupLayout(pnlOrdenar);
        pnlOrdenar.setLayout(pnlOrdenarLayout);
        pnlOrdenarLayout.setHorizontalGroup(
            pnlOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrdenarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOrdenarLayout.createSequentialGroup()
                        .addComponent(rbNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbIdioma))
                    .addGroup(pnlOrdenarLayout.createSequentialGroup()
                        .addComponent(rbProntuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbIdade)
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlOrdenarLayout.setVerticalGroup(
            pnlOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrdenarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbProntuario)
                    .addComponent(rbIdade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbIdioma)
                    .addComponent(rbNome))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout pnlProfessorLayout = new javax.swing.GroupLayout(pnlProfessor);
        pnlProfessor.setLayout(pnlProfessorLayout);
        pnlProfessorLayout.setHorizontalGroup(
            pnlProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblProfessor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(pnlOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlProfessorLayout.setVerticalGroup(
            pnlProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProfessorLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProfessor))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlProfessorLayout.createSequentialGroup()
                .addComponent(pnlOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(pnlProfessor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlProfessor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlProfessor.getAccessibleContext().setAccessibleName("Consulta Alunos");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rbProntuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbProntuarioMouseClicked
        // TODO add your handling code here:
        txtProfessor.setText("");
        txtProfessor.requestFocus();
        
        if (rbProntuario.isSelected()) {
            ArrayList<Consulta> prontuario = new ArrayList<Consulta>();
            prontuario = this.consulta.getProfessorByPront();

            DefaultTableModel tabela = (DefaultTableModel) tblProfessores.getModel();
            tabela.setNumRows(0);

            for (Consulta p : prontuario)
            {
                if (p != null)
                {
                    Object[] obj = new Object[]{
                        p.getProntuario(),
                        p.getNome(),
                        p.getIdade(),
                        p.getIdioma(),
                        p.getSalario()
                    };
                    tabela.addRow(obj);
                }
            }
        }
    }//GEN-LAST:event_rbProntuarioMouseClicked

    private void rbNomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbNomeMouseClicked
        // TODO add your handling code here:
        txtProfessor.setText("");
        txtProfessor.requestFocus();
        
        if (rbNome.isSelected()) {
            ArrayList<Consulta> nome = new ArrayList<Consulta>();
            nome = this.consulta.getProfessorByNome();

            DefaultTableModel tabela = (DefaultTableModel) tblProfessores.getModel();
            tabela.setNumRows(0);

            for (Consulta n : nome)
            {
                if (n != null)
                {
                    Object[] obj = new Object[]{
                        n.getProntuario(),
                        n.getNome(),
                        n.getIdade(),
                        n.getIdioma(),
                        n.getSalario()
                    };
                    tabela.addRow(obj);
                }
            }
        }
    }//GEN-LAST:event_rbNomeMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       grupoOrdenar.add(rbProntuario);
       grupoOrdenar.add(rbNome);
       grupoOrdenar.add(rbIdade);
       grupoOrdenar.add(rbIdioma);
       
       rbProntuario.setSelected(true);// inicia selecionado
    }//GEN-LAST:event_formWindowOpened

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        grupoOrdenar.clearSelection();
        
        if(txtProfessor.getText() == "")
        {
            preencheTabela();
        }
        else
        {
            ArrayList<Consulta> professor = new ArrayList<Consulta>();
            professor = this.consulta.getProfessor(txtProfessor.getText());

            DefaultTableModel tabela = (DefaultTableModel) tblProfessores.getModel();
            tabela.setNumRows(0);

            for (Consulta p : professor)
            {
                if (p != null)
                {
                    Object[] obj = new Object[]{
                        p.getProntuario(),
                        p.getNome(),
                        p.getIdade(),
                        p.getIdioma(),
                        p.getSalario()
                    };
                    tabela.addRow(obj);
                }
            }
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void rbIdadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIdadeActionPerformed
        // TODO add your handling code here:
        txtProfessor.setText("");
        txtProfessor.requestFocus();
        
        if (rbIdade.isSelected()) {
            ArrayList<Consulta> nome = new ArrayList<Consulta>();
            nome = this.consulta.getProfessorByIdade();

            DefaultTableModel tabela = (DefaultTableModel) tblProfessores.getModel();
            tabela.setNumRows(0);

            for (Consulta n : nome)
            {
                if (n != null)
                {
                    Object[] obj = new Object[]{
                        n.getProntuario(),
                        n.getNome(),
                        n.getIdade(),
                        n.getIdioma(),
                        n.getSalario()
                    };
                    tabela.addRow(obj);
                }
            }
        }
    }//GEN-LAST:event_rbIdadeActionPerformed

    private void rbIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIdiomaActionPerformed
        // TODO add your handling code here:
        txtProfessor.setText("");
        txtProfessor.requestFocus();
        
        if (rbIdioma.isSelected()) {
            ArrayList<Consulta> nome = new ArrayList<Consulta>();
            nome = this.consulta.getProfessorByIdioma();

            DefaultTableModel tabela = (DefaultTableModel) tblProfessores.getModel();
            tabela.setNumRows(0);

            for (Consulta n : nome)
            {
                if (n != null)
                {
                    Object[] obj = new Object[]{
                        n.getProntuario(),
                        n.getNome(),
                        n.getIdade(),
                        n.getIdioma(),
                        n.getSalario()
                    };
                    tabela.addRow(obj);
                }
            }
        }
    }//GEN-LAST:event_rbIdiomaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmConsultaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmConsultaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmConsultaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmConsultaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmConsultaAluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.ButtonGroup grupoOrdenar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblProfessor;
    private javax.swing.JPanel pnlOrdenar;
    private javax.swing.JPanel pnlProfessor;
    private javax.swing.JRadioButton rbIdade;
    private javax.swing.JRadioButton rbIdioma;
    private javax.swing.JRadioButton rbNome;
    private javax.swing.JRadioButton rbProntuario;
    private javax.swing.JTable tblProfessores;
    private javax.swing.JTextField txtProfessor;
    // End of variables declaration//GEN-END:variables

    private static class consulta {

        public consulta() {
        }
    }
}
